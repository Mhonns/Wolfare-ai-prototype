# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'wolfare-event.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
import wolfare_backend as wolfare_backend
import sys

class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.setEnabled(True)
        self.newsRadButton = QtWidgets.QRadioButton(Form)
        self.newsRadButton.setGeometry(QtCore.QRect(20, 20, 70, 20))
        self.newsRadButton.setObjectName("newsRadButton")
        self.scrollArea = QtWidgets.QScrollArea(Form)
        self.scrollArea.setGeometry(QtCore.QRect(20, 50, 411, 281))
        self.scrollArea.setMaximumSize(QtCore.QSize(411, 311))
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 409, 279))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.dataTextbox = QtWidgets.QTextEdit(self.scrollAreaWidgetContents)
        self.dataTextbox.setGeometry(QtCore.QRect(0, 0, 411, 276))
        self.dataTextbox.setReadOnly(False)
        self.dataTextbox.setPlaceholderText("")
        self.dataTextbox.setObjectName("dataTextbox")
        self.newsTextbox = QtWidgets.QTextEdit(self.scrollAreaWidgetContents)
        self.newsTextbox.setGeometry(QtCore.QRect(0, 0, 411, 276))
        self.newsTextbox.setReadOnly(True)
        self.newsTextbox.setPlaceholderText("")
        self.newsTextbox.setObjectName("newsTextbox")
        self.chatbotTextbox = QtWidgets.QTextEdit(self.scrollAreaWidgetContents)
        self.chatbotTextbox.setGeometry(QtCore.QRect(0, 0, 411, 276))
        self.chatbotTextbox.setReadOnly(True)
        self.chatbotTextbox.setPlaceholderText("")
        self.chatbotTextbox.setObjectName("chatbotTextbox")
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.chatsRadButton = QtWidgets.QRadioButton(Form)
        self.chatsRadButton.setGeometry(QtCore.QRect(90, 20, 81, 20))
        self.chatsRadButton.setObjectName("chatsRadButton")
        self.dataRadButton = QtWidgets.QRadioButton(Form)
        self.dataRadButton.setGeometry(QtCore.QRect(180, 20, 101, 20))
        self.dataRadButton.setObjectName("dataRadButton")
        self.chatsHistory = QtWidgets.QComboBox(Form)
        self.chatsHistory.setGeometry(QtCore.QRect(330, 20, 104, 26))
        self.chatsHistory.setObjectName("chatsHistory")
        self.chatsHistory.addItem("")
        self.chatsHistory.addItem("")
        self.chatsHistory.addItem("")
        self.chatFrame = QtWidgets.QFrame(Form)
        self.chatFrame.setGeometry(QtCore.QRect(20, 340, 411, 31))
        self.chatFrame.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.chatFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.chatFrame.setObjectName("chatFrame")
        self.askChatbot = QtWidgets.QTextEdit(self.chatFrame)
        self.askChatbot.setEnabled(True)
        self.askChatbot.setGeometry(QtCore.QRect(0, 0, 351, 31))
        self.askChatbot.setObjectName("askChatbot")
        self.sendButton = QtWidgets.QPushButton(self.chatFrame)
        self.sendButton.setGeometry(QtCore.QRect(350, 0, 61, 32))
        self.sendButton.setObjectName("sendButton")
        self.dataFrame = QtWidgets.QFrame(Form)
        self.dataFrame.setEnabled(True)
        self.dataFrame.setGeometry(QtCore.QRect(20, 340, 411, 31))
        self.dataFrame.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.dataFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.dataFrame.setObjectName("dataFrame")
        self.uploadButton = QtWidgets.QPushButton(self.dataFrame)
        self.uploadButton.setGeometry(QtCore.QRect(300, 0, 110, 32))
        self.uploadButton.setObjectName("uploadButton")
        self.finetuneButton = QtWidgets.QPushButton(self.dataFrame)
        self.finetuneButton.setGeometry(QtCore.QRect(100, 0, 110, 32))
        self.finetuneButton.setObjectName("finetuneButton")
        self.clearButton = QtWidgets.QPushButton(self.dataFrame)
        self.clearButton.setGeometry(QtCore.QRect(0, 0, 110, 32))
        self.clearButton.setObjectName("clearButton")
        self.latestNewsLabel = QtWidgets.QLabel(Form)
        self.latestNewsLabel.setGeometry(QtCore.QRect(20, 340, 411, 31))
        self.latestNewsLabel.setObjectName("latestNewsLabel")
        self.errorMessage = QtWidgets.QLabel(Form)
        self.errorMessage.setGeometry(QtCore.QRect(20, 370, 350, 25))
        self.errorMessage.setObjectName("errorMessage")
        self.errorMessage.setStyleSheet("color: red;")

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Wolfare Prime Interface"))
        self.newsRadButton.setText(_translate("Form", "News"))
        self.chatsRadButton.setText(_translate("Form", "Chatbot"))
        self.dataRadButton.setText(_translate("Form", "Adding data"))
        self.chatsHistory.setItemText(0, _translate("Form", "History 1"))
        self.chatsHistory.setItemText(1, _translate("Form", "History 2"))
        self.chatsHistory.setItemText(2, _translate("Form", "History 3"))
        self.askChatbot.setPlaceholderText(_translate("Form", "Text to the chatbot"))
        self.sendButton.setText(_translate("Form", "Send"))
        self.uploadButton.setText(_translate("Form", "Upload (.json)"))
        self.finetuneButton.setText(_translate("Form", "Push"))
        self.clearButton.setText(_translate("Form", "Clear"))
        self.latestNewsLabel.setText(_translate("Form", "News updated: Loading"))
        with open("data-placeholder.txt") as file:
            self.dataTextbox.setPlaceholderText(_translate("Form", file.read()))

        # Event listeners
        self.newsRadButton.clicked.connect(lambda :self.openPanal(0))
        self.chatsRadButton.clicked.connect(lambda :self.openPanal(1))
        self.dataRadButton.clicked.connect(lambda :self.openPanal(2))
        self.sendButton.clicked.connect(self.sendPrompt)
        self.chatsHistory.currentTextChanged.connect(self.loadChatCache)
        self.clearButton.clicked.connect(self.dataTextbox.clear)
        self.uploadButton.clicked.connect(lambda :self.openFile())
        self.finetuneButton.clicked.connect(self.pushToCloud)
        # Fix the ui size
        Form.setFixedSize(454, 406)
        # News section init
        self.newsRadButton.setChecked(True)
        self.clearAllPanal()
        self.openPanal(0)
        
    def clearAllPanal(self):
        # Hide all text box
        self.newsTextbox.hide()
        self.chatbotTextbox.hide()
        self.dataTextbox.hide()
        # Hide frame
        self.chatFrame.hide()
        self.dataFrame.hide()
        # Hide misc.
        self.chatsHistory.hide()
        self.latestNewsLabel.hide()

    def openPanal(self, op):
        self.clearAllPanal()
        _translate = QtCore.QCoreApplication.translate
        if op == 0: # News radio was selected
            self.newsTextbox.show()
            self.latestNewsLabel.show()
            date, news = wolfare_backend.fetchNews()
            self.latestNewsLabel.setText(_translate("Form", "News updated: " + date))
            self.newsTextbox.setText(news)
        if op == 1: # Chatbot button was selected
            self.chatbotTextbox.show()
            self.chatsHistory.show()
            self.chatFrame.show()
        if op == 2: # Adding Data button was selected
            self.dataTextbox.show()
            self.dataFrame.show()

    def loadChatCache(self):
        _translate = QtCore.QCoreApplication.translate
        selected_history = self.chatsHistory.currentText()
        self.chatbotTextbox.setText(_translate("Form", wolfare_backend.history_cache[selected_history]))

    def sendPrompt(self):
        _translate = QtCore.QCoreApplication.translate
        user_text = self.askChatbot.toPlainText()
        self.chatbotTextbox.append(_translate("Form", "User: " + user_text + "\n"))
        output = wolfare_backend.sendPrompt(user_text)
        self.chatbotTextbox.append(_translate("Form", "Chatbot: " + output))
        self.askChatbot.setText(_translate("Form", ""))
        wolfare_backend.saveCache(self.chatsHistory.currentText(), self.chatbotTextbox.toPlainText())

    def openFile(self):
        self.new_window = UploadPath()
        self.new_window.show()

    def pushToCloud(self):
        wolfare_backend.pushToCloud(self.dataTextbox.toPlainText())

class UploadPath(QtWidgets.QWidget):
    def __init__(self):
        super().__init__()
        self.setFixedSize(400, 100)
        self.setWindowTitle("Upload path")
        self.uploadFrame = QtWidgets.QFrame(self)
        self.uploadFrame.setGeometry(QtCore.QRect(20, 40, 360, 31))
        self.uploadFrame.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.uploadFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.uploadFrame.setObjectName("uploadFrame")
        self.pathToTarget = QtWidgets.QLineEdit(self.uploadFrame)
        self.pathToTarget.setGeometry(QtCore.QRect(0, 0, 280, 25))
        self.pathToTarget.setObjectName("pathToTarget")
        self.errorMessage = QtWidgets.QLabel(self)
        self.errorMessage.setGeometry(QtCore.QRect(20, 65, 300, 25))
        self.errorMessage.setObjectName("errorMessage")
        self.errorMessage.setStyleSheet("color: red;")
        self.uploadButton = QtWidgets.QPushButton(self.uploadFrame)
        self.uploadButton.setGeometry(QtCore.QRect(280, 0, 70, 25))
        self.uploadButton.setObjectName("uploadButton")
        self.uploadButton.setText("Upload")
        self.uploadButton.clicked.connect(self.uploadFile)

        # Optional: Add a label above the frame
        self.label = QtWidgets.QLabel(self)
        self.label.setGeometry(QtCore.QRect(20, 10, 400, 20))
        self.label.setText("Enter path to target file: (eg." + r"C:\Path\To\Target.json)")

    def uploadFile(self):
        global ui
        error_code, result = wolfare_backend.uploadFile(self.pathToTarget.text())
        if error_code == 0:
            self.close()
        else:
            self.errorMessage.setText("Error: " + result)

        # Set up a button to close the alert box
        self.close_button = QtWidgets.QPushButton("Close", self)
        self.close_button.setGeometry(160, 150, 80, 30)
        self.close_button.clicked.connect(self.close)

if __name__ == "__main__":
    # Create the QApplication and Form
    global Form
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())